[project]
name = "Pytorch Rdc-Net"
version = "0.1.0"
description = "Add a short description here"
authors = ["Tim-Oliver Buchholz <tim-oliver.buchholz@fmi.ch>"]
channels = ["nvidia", "conda-forge", "bioconda"]
platforms = ["linux-64"]

[system-requirements]
cuda = "12.7"
# See https://pixi.sh/latest/features/system_requirements/#default-system-requirements

[tasks]
cuda_available = { cmd = "python -c 'import torch; print(torch.cuda.is_available())'" }
cache_status = "python -m faim_ipa.pixi.cache_status"
source_status = "python -m faim_ipa.pixi.src_status source"
log_commit = {cmd = 'python -m faim_ipa.pixi.log_commit $TASK', env = {TASK = ""}}
build_rdcnet_config = { cmd = "mkdir -p $WD ; TASK=BUILD_RDCNET_CONFIG pixi run log_commit ; cd $WD ; python $PIXI_PROJECT_ROOT/source/rdcnet_config.py", env = { WD = "runs/example"}, depends_on=["cache_status", "source_status"]}
build_trainer_config = { cmd = "mkdir -p $WD ; TASK=BUILD_TRAINER_CONFIG pixi run log_commit ; cd $WD ; python $PIXI_PROJECT_ROOT/source/trainer_config.py", env = { WD = "runs/example"}, depends_on=["cache_status", "source_status"]}
train_BBBC039 = { cmd = "TASK=TRAIN_BBBC039 pixi run log_commit ; cd $WD ; python $PIXI_PROJECT_ROOT/source/train_BBBC039.py --rdcnet_config rdcnet_config.yaml --trainer_config trainer_config.yaml",  env = { WD = "runs/example"}, depends_on=["cache_status", "source_status"] }
train_MoNuSeg = { cmd = "TASK=TRAIN_MoNuSeg pixi run log_commit ; cd $WD ; python $PIXI_PROJECT_ROOT/source/train_MoNuSeg.py --rdcnet_config rdcnet_config.yaml --trainer_config trainer_config.yaml",  env = { WD = "runs/example"}, depends_on=["cache_status", "source_status"] }

[dependencies]
python = ">=3.12.7,<3.13"
scikit-image = ">=0.24.0,<0.25"
matplotlib = ">=3.9.2,<3.10"
pandas = ">=2.2.3,<2.3"
faim-ipa = ">=0.9.1,<0.10"
rich = ">=13.9.4,<13.10"
pytorch-lightning = ">=2.4.0,<3"
monai = ">=1.4.0,<2"
pytorch = ">=2.5.1,<3"
ipykernel = ">=6.29.5,<7"
numba = ">=0.60.0,<0.61"
tensorboard = ">=2.18.0,<3"

[feature.docs.dependencies]
mkdocs = ">=1.6.0,<2"
mkdocs-git-committers-plugin-2 = ">=2.3.0,<3"
mkdocs-git-revision-date-localized-plugin = ">=1.2.6,<2"
mkdocs-material = ">=9.5.31,<10"
mkdocstrings = ">=0.25.2,<0.26"
mkdocstrings-python = ">=1.10.7,<2"

[feature.docs.tasks]
clean_docs = "rm -rf site"
build_docs = { cmd ="OFFLINE=TRUE mkdocs build", depends_on=["clean_docs"] }
show_docs = "mkdocs serve"

[feature.dev.dependencies]
pre-commit = ">=3.1.1,<3.8"

[feature.dev.tasks]
install_hooks = "pre-commit install"
lint = { cmd="pre-commit run --all-files", depends_on=["install_hooks"] }


[feature.jupyter.dependencies]
jupyter = ">=1.0.0,<1.1"
napari = ">=0.5.1,<0.6"
pyqt = ">=5.15.9,<6"

[feature.jupyter.tasks]
jupyter = "jupyter lab"
napari = "napari"

[feature.nbdev.dependencies]
nbdev = ">=2.2.10,<2.3"

[feature.nbdev.tasks]
clean = "nbdev_clean --clear_all"

[environments]
docs = { features = ["docs"], solve-group="default" }
dev = { features = ["dev"], solve-group="default" }
jupyter = { features = ["jupyter"], solve-group="default" }
nbdev = { features = ["nbdev"], no-default-feature = true}

[pypi-dependencies]
pytorch-ignite = ">=0.5.1, <0.6"
torchist = ">=0.2.3, <0.3"
torchstain = ">=1.3.0, <2"
